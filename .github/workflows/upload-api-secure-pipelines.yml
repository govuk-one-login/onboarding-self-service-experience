name: Upload API to secure pipelines

on:
#   workflow_dispatch:
  push:
#    branches: [ main ]


permissions: read-all
concurrency: upload-api-secure-pipelines-build-${{ github.head_ref || github.ref_name }}

jobs:

  deploy:
    name: Upload API package
    runs-on: ubuntu-latest
    environment: build

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Pull repository
        uses: actions/checkout@v3

#       - name: Get distribution artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: self-service-api
          
          
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.API_BUILD_GHA_ROLE_ARN }}
          aws-region: eu-west-2

      - name:  Build SAM app
        working-directory: .
        run: sam build --template infrastructure/api/sse-api.yml --base-dir .



      - name: Package SAM application
        env:
          ARTIFACT_SOURCE_BUCKET_NAME: ${{ secrets.API_BUILD_ARTIFACT_BUCKET_NAME }}
          SIGNING_PROFILE_NAME: ${{ secrets.AWS_SIGNING_PROFILE_NAME }}
        run: |
          sam package \
            --s3-bucket="$ARTIFACT_SOURCE_BUCKET_NAME" \
            --output-template-file=infrastructure/api/sse-api.yml \
            --signing-profiles \
              UpdateUserFunction="$SIGNING_PROFILE_NAME" \
              GetServicesFunction="$SIGNING_PROFILE_NAME" \
              PutServiceFunction="$SIGNING_PROFILE_NAME" \
              GetServiceClientsFunction="$SIGNING_PROFILE_NAME" \
              PutServiceClientFunction="$SIGNING_PROFILE_NAME" \
              UpdateServiceClientFunction="$SIGNING_PROFILE_NAME" \
              PutServiceUserFunction="$SIGNING_PROFILE_NAME" \
              RegisterAuthClientFunction="$SIGNING_PROFILE_NAME"
                  

          - name: Zip CloudFormation template
            run: zip template.zip cf-template.yaml

          - name: Push CloudFormation artifact to S3
            env:
              ARTIFACT_SOURCE_BUCKET_NAME: ${{ secrets.ARTIFACT_SOURCE_BUCKET_NAME }}
              RELEASE_NAME: "sse-api-release"
            run: aws s3 cp template.zip "s3://$ARTIFACT_SOURCE_BUCKET_NAME/template.zip" --metadata "repository=$GITHUB_REPOSITORY,commitsha=$GITHUB_SHA,release=$RELEASE_NAME,codepipeline-artifact-revision-summary=$RELEASE_NAME"
          
