name: Build frontend image

on:
  workflow_call:
    inputs:
      environment: { required: true, type: string }
    secrets:
      aws-role-arn: { required: true }

concurrency: build-front-image-${{ inputs.environment }}-${{ github.head_ref || github.ref_name }}

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Frontend image
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.push-docker-image.outputs.image-url }}

    steps:
      - name: Pull repository
        uses: actions/checkout@v3

      - name: Get distribution artifact
        uses: actions/download-artifact@v3
        with:
          name: self-service-front

      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.aws-role-arn }}
          mask-aws-account-id: false
          aws-region: eu-west-2

      - name: Push Docker image
        id: push-docker-image
        uses: alphagov/di-github-actions/aws/ecr/build-docker-image@5dacba941def444d69f02843feaebed79b5fca51
        with:
          repository: self-service/frontend
          image-version: ${{ github.sha }}
          image-tags: ${{ github.head_ref || github.ref_name }}
          dockerfile-path: infrastructure/frontend/Dockerfile

      - name: Get ECS roles
        id: get-ecs-roles
        uses: alphagov/di-github-actions/aws/ssm/get-parameters@5dacba941def444d69f02843feaebed79b5fca51
        with:
          parameter-path: /self-service/config/frontend/ecs
          trim-path: true

      - name: Register task definition
        id: register-task-definition
        uses: alphagov/di-github-actions/aws/ecs/register-task-definition@5dacba941def444d69f02843feaebed79b5fca51
        with:
          task-definition: express/task-definition.json
          container: self-service-frontend
          image-uri: ${{ steps.push-docker-image.outputs.image-uri }}
          task-role-arn: ${{ fromJSON(steps.get-ecs-roles.outputs.parameters).task-role-arn }}
          execution-role-arn: ${{ fromJSON(steps.get-ecs-roles.outputs.parameters).execution-role-arn }}
          task-definition-tags: |
            Branch=${{ github.head_ref || github.ref_name }}
            Version=${{ steps.push-docker-image.outputs.image-version }}
