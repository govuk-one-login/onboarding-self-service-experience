name: Deploy to PaaS

on:
  workflow_call:
    inputs:
      environment: { required: true, type: string }
      cf-space-name: { required: true, type: string }
      app-name-prefix: { required: false, type: string }
      url: { required: false, type: string }
      instances: { required: false, type: number, default: 1 }
      rolling-deployment: { required: false, type: boolean, default: false }
      cognito-client: { required: false, type: string, default: CognitoClient }
      lambda-facade: { required: false, type: string, default: LambdaFacade }
      google-tag-id: { required: false, type: string, default: GTM-PFTQ6G2 }
    secrets:
      cf-username: { required: true }
      cf-password: { required: true }
    outputs:
      environment:
        description: "The environment name the app was deployed to"
        value: ${{ inputs.environment }}
      deployment-url:
        description: "The PaaS deployment URL"
        value: ${{ jobs.deploy.outputs.deployment-url }}

permissions: read-all
concurrency: deploy-paas-${{ inputs.environment }}-${{ github.head_ref || github.ref_name }}

jobs:
  deploy:
    name: Deploy to PaaS
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.push-to-paas.outputs.deployment-url }}
    outputs:
      deployment-url: ${{ steps.push-to-paas.outputs.deployment-url }}
    steps:
      - name: Get distribution artifact
        uses: actions/download-artifact@v3
        with:
          name: self-service-front

      - name: Push to PaaS
        id: push-to-paas
        uses: alphagov/di-github-actions/paas/deploy-app@5dacba941def444d69f02843feaebed79b5fca51
        with:
          url: ${{ inputs.url }}
          manifest: express/manifest.yml
          start-command: npm run start --workspace=express
          app-name-prefix: ${{ inputs.app-name-prefix }}
          cf-org-name: gds-digital-identity-onboarding
          cf-space-name: ${{ inputs.cf-space-name }}
          cf-username: ${{ secrets.cf-username }}
          cf-password: ${{ secrets.cf-password }}
          rolling-deployment: ${{ inputs.rolling-deployment }}
          variables: |
            cognito-client = ${{ inputs.cognito-client }}
            lambda-facade = ${{ inputs.lambda-facade }}
            google-tag-id = ${{ inputs.google-tag-id }}
