name: Deploy to production
run-name: Deploy to production [${{ github.head_ref || github.ref_name }}]

on:
  push:
    branches:
      - main

concurrency: deploy-production

permissions:
  id-token: write
  contents: read

jobs:
  deploy-frontend:
    name: Deploy Frontend (prod)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment:
      name: production
      url: ${{ steps.push.outputs.pipeline-url }}
    outputs:
      pipeline-url: ${{ steps.push.outputs.pipeline-url }}
    steps:
      - name: Pull repository
        id: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Push
        id: push
        uses: ./.github/actions/push-frontend
        with:
          deployment-role-arn: ${{ vars.FRONTEND_DEPLOYMENT_ROLE_ARN }}
          artifact-bucket-name: ${{ vars.FRONTEND_DEPLOYMENT_ARTIFACTS_BUCKET }}
          pipeline-name: ${{ vars.FRONTEND_PIPELINE_NAME }}
          dynatrace-paas-token: ${{ secrets.DYNATRACE_PAAS_TOKEN }}
          container-repository-name: ${{ vars.FRONTEND_CONTAINER_REPOSITORY_NAME }}
          test-container-repository-name: ${{ vars.FRONTEND_TEST_CONTAINER_REPOSITORY_NAME }}

  deploy-dynamodb:
    name: Deploy Dynamodb (prod)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: production
      url: ${{ steps.deploy.outputs.pipeline-url }}
    outputs:
      artifact-name: ${{ steps.build.outputs.artifact-name }}
      cache-key: ${{ steps.build.outputs.cache-key }}
      pipeline-url: ${{ steps.deploy.outputs.pipeline-url }}
    steps:
      - name: Build
        id: build
        uses: govuk-one-login/github-actions/sam/build-application@6144f39407b01c9b25b39537b3956deca9e32620 # 22/02/2024
        with:
          template: backend/dynamodb/dynamodb.template.yml
          base-dir: backend/dynamodb
          source-dir: backend/dynamodb
          cache-name: backend-dynamodb-infra
          artifact-name: backend-dynamodb-infrastructure
          pull-repository: true

      - name: Deploy
        id: deploy
        uses: govuk-one-login/github-actions/secure-pipelines/deploy-application@db4b3614f5f863f56a5356052262878ecec83b31 # 22/07/2024
        timeout-minutes: 15
        with:
          aws-role-arn: ${{ vars.DYNAMODB_DEPLOYMENT_ROLE_ARN }}
          artifact-bucket-name: ${{ vars.DYNAMODB_DEPLOYMENT_ARTIFACTS_BUCKET }}
          signing-profile-name: ${{ vars.SIGNING_PROFILE_NAME }}
          pipeline-name: ${{ vars.DYNAMODB_PIPELINE_NAME }}
          artifact-name: ${{ steps.build.outputs.artifact-name }}

  deploy-cognito:
    name: Deploy Cognito (prod)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: production
      url: ${{ steps.deploy.outputs.pipeline-url }}
    outputs:
      artifact-name: ${{ steps.build.outputs.artifact-name }}
      cache-key: ${{ steps.build.outputs.cache-key }}
      pipeline-url: ${{ steps.deploy.outputs.pipeline-url }}
    steps:
      - name: Build
        id: build
        uses: govuk-one-login/github-actions/sam/build-application@6144f39407b01c9b25b39537b3956deca9e32620 # 22/02/2024
        with:
          template: backend/cognito/cognito.template.yml
          manifest: backend/cognito/package.json
          base-dir: backend/cognito
          source-dir: backend/cognito
          cache-name: backend-cognito-infra
          artifact-name: backend-cognito-infrastructure
          pull-repository: true

      - name: Deploy
        id: deploy
        uses: govuk-one-login/github-actions/secure-pipelines/deploy-application@db4b3614f5f863f56a5356052262878ecec83b31 # 22/07/2024
        timeout-minutes: 15
        with:
          aws-role-arn: ${{ vars.COGNITO_DEPLOYMENT_ROLE_ARN }}
          artifact-bucket-name: ${{ vars.COGNITO_DEPLOYMENT_ARTIFACTS_BUCKET }}
          signing-profile-name: ${{ vars.SIGNING_PROFILE_NAME }}
          pipeline-name: ${{ vars.COGNITO_PIPELINE_NAME }}
          artifact-name: ${{ steps.build.outputs.artifact-name }}

  deploy-api:
    name: Deploy API (prod)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: production
      url: ${{ steps.deploy.outputs.pipeline-url }}
    outputs:
      artifact-name: ${{ steps.build.outputs.artifact-name }}
      cache-key: ${{ steps.build.outputs.cache-key }}
      pipeline-url: ${{ steps.deploy.outputs.pipeline-url }}
    steps:
      - name: Build
        id: build
        uses: govuk-one-login/github-actions/sam/build-application@6144f39407b01c9b25b39537b3956deca9e32620 # 22/02/2024
        with:
          template: backend/api/api.template.yml
          manifest: backend/api/package.json
          base-dir: backend/api
          additional-artifact-paths: backend/api/state-machines
          cache-name: backend-api-infra
          artifact-name: backend-api-infrastructure
          pull-repository: true

      - name: Deploy
        id: deploy
        uses: govuk-one-login/github-actions/secure-pipelines/deploy-application@db4b3614f5f863f56a5356052262878ecec83b31 # 22/07/2024
        timeout-minutes: 15
        with:
          aws-role-arn: ${{ vars.API_DEPLOYMENT_ROLE_ARN }}
          artifact-bucket-name: ${{ vars.API_DEPLOYMENT_ARTIFACTS_BUCKET }}
          signing-profile-name: ${{ vars.SIGNING_PROFILE_NAME }}
          pipeline-name: ${{ vars.API_PIPELINE_NAME }}
          artifact-name: ${{ steps.build.outputs.artifact-name }}
          template: .aws-sam/build/template.yaml
