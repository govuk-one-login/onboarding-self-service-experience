AWSTemplateFormatVersion: "2010-09-09"
Description: DynamoDB tables for Admin Tool

Parameters:
  DeletionProtection:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /self-service/config/deletion-protection-enabled
  DeploymentName:
    Type: String
    MaxLength: 28
    AllowedPattern: ^.*[^-]$
    Default: self-service
    Description: A unique prefix to identify the deployment; used when importing or exporting values from related stacks

  # to be removed from this file
  CidrBlock:
    Description: >
      The CIDR block that defines the IP range that the VPC will use. Defaults
      to 10.0.0.0/16 and there is no specific reason to change this unless you
      have multiple VPCs that are going to be peered or connected via a Transit
      Gateway. Must be a /16.
    Type: "String"
    Default: "10.1.0.0/16"
    AllowedPattern: "([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/16)?"

  # to be moved to dev-platform-deploy
  FlowLogRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events.'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]

  # to be moved to dev-platform-deploy
  FlowLogTrafficType:
    Description: 'The type of traffic to log.'
    Type: String
    Default: ALL
    AllowedValues:
      - ACCEPT
      - REJECT
      - ALL

Conditions:
  DeletionProtectionEnabled: !Equals [ !Ref DeletionProtection, ACTIVE ]

# to be removed from this file
Mappings:
  SubnetZoneIds:
    eu-west-2:
      "a": "euw2-az1"
      "b": "euw2-az2"
      "c": "euw2-az3"

Resources:
  DataTable:
    # checkov:skip=CKV_AWS_28:Ensure Dynamodb point in time recovery (backup) is enabled
    # checkov:skip=CKV_AWS_119:Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK
    Type: AWS::DynamoDB::Table
    Properties:
      TableClass: STANDARD
      BillingMode: PAY_PER_REQUEST
      TableName: !Sub ${DeploymentName}-data
      DeletionProtectionEnabled: !If [ DeletionProtectionEnabled, true, false ]
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: gsi1
          KeySchema:
            - AttributeName: sk
              KeyType: HASH
            - AttributeName: pk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      SSESpecification:
        SSEEnabled: true

  SessionsTable:
    # https://github.com/ca98am79/connect-dynamodb#options
    # checkov:skip=CKV_AWS_28:Ensure Dynamodb point in time recovery (backup) is enabled
    # checkov:skip=CKV_AWS_119:Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK
    Type: AWS::DynamoDB::Table
    Properties:
      TableClass: STANDARD
      BillingMode: PAY_PER_REQUEST
      TableName: !Sub ${DeploymentName}-sessions
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: expires
        Enabled: true
      SSESpecification:
        SSEEnabled: true

  # to be removed from this file
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-Vpc"
        - Key: "Source"
          Value: "rafal test VPC"

  # to be removed from this file
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZoneId: !FindInMap [ SubnetZoneIds, !Ref AWS::Region, "a"]
      CidrBlock: !Select [5, !Cidr [!Ref CidrBlock, 8, 9]]
      VpcId: !Ref Vpc
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-PrivateSubnetA"
        - Key: "Service"
          Value: "ci/cd"
        - Key: "Source"
          Value: "alphagov/di-devplatform-deploy/vpc/template.yaml"

  # to be moved to dev-platform-deploy
  BlockSshRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !GetAtt Vpc.DefaultNetworkAcl
      RuleNumber: 30
      Protocol: 6
      RuleAction: deny
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 22

  # to be moved to dev-platform-deploy
  BlockRdpRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !GetAtt Vpc.DefaultNetworkAcl
      RuleNumber: 60
      Protocol: 6
      RuleAction: deny
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 3389
        To: 3389

  # to be moved to dev-platform-deploy
  FlowLogRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'vpc-flow-logs.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'flowlogs-policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                Resource: !GetAtt 'FlowLogLogGroup.Arn'

  # to be moved to dev-platform-deploy
  FlowLogLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref FlowLogRetentionInDays

  # to be moved to dev-platform-deploy
  FlowLog:
    Type: 'AWS::EC2::FlowLog'
    Properties:
      DeliverLogsPermissionArn: !GetAtt 'FlowLogRole.Arn'
      LogGroupName: !Ref FlowLogLogGroup
      ResourceId: !Ref Vpc
      ResourceType: 'VPC'
      TrafficType: !Ref FlowLogTrafficType

Outputs:
  DataTableName:
    Value: !Ref DataTable
    Export:
      Name: !Sub ${DeploymentName}-DynamoDB-DataTableName
  SessionsTableName:
    Value: !Ref SessionsTable
    Export:
      Name: !Sub ${DeploymentName}-DynamoDB-SessionsTableName
  SessionsTableARN:
    Value: !GetAtt SessionsTable.Arn
    Export:
      Name: !Sub ${DeploymentName}-DynamoDB-SessionsTableARN
