AWSTemplateFormatVersion: "2010-09-09"
Description: Supporting stacks for secure pipelines
Transform: AWS::LanguageExtensions

Parameters:
  # Template reference https://github.com/alphagov/di-devplatform-deploy
  TemplateStorageBucket:
    Type: String
    Default: https://template-storage-templatebucket-1upzyw6v9cs42.s3.amazonaws.com
  ExportNamePrefix:
    Type: String
    Default: secure-pipelines
    AllowedPattern: ^.*[^-]$
    Description: Prefix to use when importing or exporting values
  InitialAccount:
    Type: String
    Default: No
    AllowedValues: [ Yes, No ]
  EnvironmentType:
    Type: String
    Default: test
    AllowedValues: [ development, test, production ]
  DownstreamAccounts:
    Type: String
    Default: ""
  GrafanaKeySecretName:
    Type: String
    Default: /self-service/secure-pipelines/grafana-api-key
  DeveloperNotificationsEmail:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /self-service/secure-pipelines/developer-notification-email

Mappings:
  Grafana:
    Env:
      production: prod
      default: non-prod
  Slack:
    Channel:
      development: C04QFSGKCGG    # di-sse-dev-notifications
      default: C02T6P3NVDX        # di-sse-tech-notifications

Conditions:
  InitialAccount: !Equals [ !Ref InitialAccount, Yes ]
  DevelopmentAccount: !Equals [ !Ref EnvironmentType, development ]
  InitialProductionAccount: !And [ !Condition InitialAccount, !Not [ !Condition DevelopmentAccount ] ]

Resources:
  GitHubIdentityProvider:
    Type: AWS::CloudFormation::Stack
    Condition: InitialProductionAccount
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/github-identity/template.yaml
      Parameters:
        System: Dev Platform

  ContainerSigner:
    Type: AWS::CloudFormation::Stack
    Condition: InitialProductionAccount
    DependsOn: GitHubIdentityProvider
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/container-signer/template.yaml
      Parameters:
        AllowedAccounts: !Ref DownstreamAccounts

  CodeSigner:
    Type: AWS::CloudFormation::Stack
    Condition: InitialAccount
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/signer/template.yaml
      Parameters:
        System: Dev Platform

  GrafanaMetrics:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/grafana-metrics/template.yaml
      Parameters:
        GrafanaEnvironment: !FindInMap [ Grafana, Env, !Ref EnvironmentType, { DefaultValue: !FindInMap [ Grafana, Env, default ] } ]

  # Setting up Grafana key rotation
  # https://govukverify.atlassian.net/wiki/spaces/PLAT/pages/3467509761/Grafana+key+rotation
  # https://di-team-manual.london.cloudapps.digital/development-standards-processes/aws-environment-grafana/
  GrafanaKeyRotator:
    Type: AWS::CloudFormation::Stack
    DependsOn: InfrastructureAuditHook
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/grafana-key-rotation/template.yaml
      Parameters:
        GrafanaEnvironment: !FindInMap [ Grafana, Env, !Ref EnvironmentType, { DefaultValue: !FindInMap [ Grafana, Env, default ] } ]
        GrafanaKeySecretId: !Ref GrafanaKeySecretName

  SlackNotifications:
    Type: AWS::CloudFormation::Stack
    DependsOn: InfrastructureAuditHook
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/build-notifications/template.yaml
      Parameters:
        SlackWorkspaceId: T8GT9416G
        SlackChannelId: !FindInMap [ Slack, Channel, !Ref EnvironmentType, { DefaultValue: !FindInMap [ Slack, Channel, default ] } ]

  ECRScanningNotifications:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/ecr-image-scan-findings-logger/template.yaml
      Parameters:
        NotificationEmail: !Ref DeveloperNotificationsEmail

  LambdaAuditHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/lambda-audit-hook/template.yaml

  CheckovHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/checkov-hook/template.yaml

  InfrastructureAuditHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/infrastructure-audit-hook/template.yaml

  APIGatewayLoggingConfig:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateStorageBucket}/api-gateway-logs/template.yaml

Outputs:
  GitHubIdentityProviderARN:
    Condition: InitialProductionAccount
    Value: !GetAtt GitHubIdentityProvider.Outputs.GitHubIdentityProviderArn
  ContainerSigningKeyARN:
    Condition: InitialProductionAccount
    Value: !GetAtt ContainerSigner.Outputs.ContainerSignerKmsKeyArn
  SigningProfileName:
    Condition: InitialAccount
    Value: !GetAtt CodeSigner.Outputs.SigningProfileName
  SigningProfileARN:
    Condition: InitialAccount
    Value: !GetAtt CodeSigner.Outputs.SigningProfileArn
  SigningProfileVersionARN:
    Condition: InitialAccount
    Value: !GetAtt CodeSigner.Outputs.SigningProfileVersionArn
  SlackNotificationsStackName:
    Value: !Select [ 1, !Split [ "/", !Ref SlackNotifications ] ]
    Export:
      Name: !Sub ${ExportNamePrefix}-SlackNotificationsStackName
