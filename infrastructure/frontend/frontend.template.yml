AWSTemplateFormatVersion: "2010-09-09"
Description: DI Admin Tool frontend
Transform: AWS::LanguageExtensions

Parameters:
  Environment:
    Description: "The name of the environment to deploy to."
    Type: "String"
    Default: local
    AllowedValues:
      - "local"
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
  DeploymentName:
    Type: String
    MaxLength: 22
    AllowedPattern: ^.*[^-]$
    Default: self-service
    Description: A unique prefix to identify the deployment; used to distinguish variation between ephemeral stacks
  ImageURI:
    Type: String
    Default: ""
    Description: The URI of the ECR image to use for the container
  ContainerPort:
    Type: Number
    Default: 3000
  ShowTestBanner:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /self-service/frontend/show-test-banner
  GoogleTagID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /self-service/frontend/google-tag-id
  AllowedEmailDomainsSource:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /self-service/frontend/allowed-email-domains-source
  UserSignupSheetDataRange:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /self-service/frontend/user-signup-sheet-data-range
  UserSignupSheetHeaderRange:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /self-service/frontend/user-signup-sheet-header-range
  PublicBetaSheetDataRange:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /self-service/frontend/public-beta-sheet-data-range
  PublicBetaSheetHeaderRange:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /self-service/frontend/public-beta-sheet-header-range
  PermissionsBoundary:
    Type: String
    Default: ""
    Description: The ARN of the permissions boundary to apply when creating IAM roles

Rules:
  DeploymentNameRequired:
    RuleCondition: !Equals [ !Ref Environment, "local" ]
    Assertions:
      - Assert: !Not [ !Equals [ !Ref DeploymentName, "" ] ]
        AssertDescription: >
          Must specify DeploymentName parameter when Environment is "local"

  DeploymentNameMustBeEmpty:
    RuleCondition: !Not [ !Equals [ !Ref Environment, "local" ] ]
    Assertions:
      - Assert: !Equals [ !Ref DeploymentName, "self-service" ] # Confirm the default value is used.
        AssertDescription: >
          Must not specify DeploymentName parameter when Environment is not "local"

Mappings:
  EnvironmentConfiguration:
    local:
      cslsLoggingEnabled: true
      clslSubscriptionFilterArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    dev:
      cslsLoggingEnabled: false
      clslSubscriptionFilterArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    build:
      cslsLoggingEnabled: false
      clslSubscriptionFilterArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    staging:
      cslsLoggingEnabled: false
      clslSubscriptionFilterArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    integration:
      cslsLoggingEnabled: false
      clslSubscriptionFilterArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    production:
      cslsLoggingEnabled: false
      clslSubscriptionFilterArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2

  # https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-access-logs.html
  ElasticLoadBalancer:
    eu-west-2:
      AccountID: 652711504416
  TxMAAccountARN:
    Environment:
      local: 'arn:aws:iam::494650018671:root'
      dev: 'arn:aws:iam::494650018671:root'
      build: 'arn:aws:iam::399055180839:root'
      staging: 'arn:aws:iam::178023842775:root'
      integration: 'arn:aws:iam::729485541398:root'
      production: 'arn:aws:iam::451773080033:root'

Conditions:
  Subdomain: !Not [ !Equals [ !Ref DeploymentName, self-service ] ]
  UsePermissionsBoundary: !Not [ !Equals [ !Ref PermissionsBoundary, "" ] ]
  CslsLoggingEnabled: !Equals [ !FindInMap [ EnvironmentConfiguration, !Ref Environment, cslsLoggingEnabled ], true ]
  IsLocal: !Equals [ !Ref Environment, "local" ]

Resources:

  #--- Fargate / ECS ---#

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities: [ FARGATE ]
      TaskRoleArn: !GetAtt TaskRole.Arn
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      Cpu: 256
      Memory: 512
      Family: !Sub ${DeploymentName}-frontend
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: self-service-frontend
          Image: !Ref ImageURI
          ReadonlyRootFilesystem: true
          Environment:
            - Name: PORT
              Value: !Ref ContainerPort
            - Name: TEST_BANNER
              Value: !Ref ShowTestBanner
            - Name: GOOGLE_TAG_ID
              Value: !Ref GoogleTagID
            - Name: SESSION_SECRET
              Value: "{{resolve:secretsmanager:/self-service/frontend/session-secret}}"
            - Name: ALLOWED_EMAIL_DOMAINS_SOURCE
              Value: !Ref AllowedEmailDomainsSource
            - Name: SESSIONS_TABLE
              Value:
                Fn::ImportValue: !Sub ${DeploymentName}-DynamoDB-SessionsTableName
            - Name: API_BASE_URL
              Value:
                Fn::ImportValue: !Sub ${DeploymentName}-API-BaseURL
            - Name: COGNITO_USER_POOL_ID
              Value:
                Fn::ImportValue: !Sub ${DeploymentName}-Cognito-UserPoolID
            - Name: COGNITO_CLIENT_ID
              Value:
                Fn::ImportValue: !Sub ${DeploymentName}-Cognito-UserPoolClientID
            - Name: DT_LOGLEVELCON
              Value: INFO
            - Name: GOOGLE_SHEET_CREDENTIALS
              Value: "{{resolve:secretsmanager:/self-service/frontend/google-sheet-credentials}}"
            - Name: USER_SIGNUP_SHEET_ID
              Value: "{{resolve:secretsmanager:/self-service/frontend/user-signup-sheet-id}}"
            - Name: USER_SIGNUP_SHEET_DATA_RANGE
              Value: !Ref UserSignupSheetDataRange
            - Name: USER_SIGNUP_SHEET_HEADER_RANGE
              Value: !Ref UserSignupSheetHeaderRange
            - Name: PUBLIC_BETA_SHEET_DATA_RANGE
              Value: !Ref PublicBetaSheetDataRange
            - Name: PUBLIC_BETA_SHEET_HEADER_RANGE
              Value: !Ref PublicBetaSheetHeaderRange

          PortMappings:
            - ContainerPort: !Ref ContainerPort
          HealthCheck:
            Command: [ "CMD", "wget", "--spider", !Sub "http://localhost:${ContainerPort}" ]
          LogConfiguration:
            # https://docs.docker.com/config/containers/logging/awslogs/
            LogDriver: awslogs
            Options:
              # Consider lines not starting with whitespace as a multi-line log message boundary
              awslogs-multiline-pattern: ^[^\s}]+.*$
              awslogs-group: !Ref FrontendLogsGroup
              awslogs-stream-prefix: ecs
              awslogs-region: !Ref AWS::Region

  LogAuditLogGroup:
    # checkov:skip=CKV_AWS_158:Ensure that CloudWatch Log Group is encrypted by KMS
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join
        - "/"
        - - '/onboarding-self-service/frontend'
          - !If [ IsLocal, !Ref DeploymentName, !Ref AWS::NoValue ]
          - 'audit'
      RetentionInDays: 14

  FrontendLogsGroup:
    # checkov:skip=CKV_AWS_158:Ensure that CloudWatch Log Group is encrypted by KMS
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join
        - "/"
        - - '/aws/ecs'
          - 'onboarding-self-service/frontend'
          - !If [ IsLocal, !Ref DeploymentName, !Ref AWS::NoValue ]
      RetentionInDays: 14
      DataProtectionPolicy:
        Name: data-protection-policy-frontend
        Description: Data Protection for Cloudwatch Logs
        Version: '2021-06-01'
        Statement:
          - Sid: audit-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/EmailAddress
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/OpenSshPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PuttyPrivateKey
            Operation:
              Audit:
                FindingsDestination:
                  CloudWatchLogs:
                    LogGroup: !Ref LogAuditLogGroup
          - Sid: redact-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/EmailAddress
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/OpenSshPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PuttyPrivateKey
            Operation:
              Deidentify:
                MaskConfig: { }

  FrontendLogCslsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: CslsLoggingEnabled
    Properties:
      LogGroupName: !Ref FrontendLogsGroup
      FilterName: "ECS logs for Frontend Service"
      FilterPattern: ""
      DestinationArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, clslSubscriptionFilterArn ]

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Grant the Fargate and ECS container agents permissions to make AWS API calls and access ECR
      PermissionsBoundary: !If [ UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue ]
      ManagedPolicyArns: [ arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy ]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: ecs-tasks.amazonaws.com
      Policies:
        - PolicyName: GetDynatraceSecret
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: arn:aws:secretsmanager:eu-west-2:216552277552:secret:*
              - Effect: Allow
                Action: secretsmanager:ListSecrets
                Resource: arn:aws:secretsmanager:eu-west-2:216552277552:secret:*
              - Effect: Allow
                Action: kms:Decrypt
                Resource: arn:aws:kms:eu-west-2:216552277552:key/*

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Allow the Frontend application tasks to access AWS services
      PermissionsBoundary: !If [ UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue ]
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: [ ecs-tasks.amazonaws.com ]
            Condition:
              ArnLike:
                aws:SourceArn: !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:*
      Policies:
        # https://github.com/ca98am79/connect-dynamodb#iam-permissions
        - PolicyName: SessionStorageTable
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:DescribeTable
                Resource:
                  Fn::ImportValue: !Sub ${DeploymentName}-DynamoDB-SessionsTableARN
        - PolicyName: Cognito
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cognito-idp:AdminCreateUser
                  - cognito-idp:AdminInitiateAuth
                  - cognito-idp:AdminUpdateUserAttributes
                  - cognito-idp:AdminSetUserMFAPreference
                  - cognito-idp:AdminRespondToAuthChallenge
                  - cognito-idp:AdminGetUser
                  - cognito-idp:AddCustomAttributes
                  - cognito-idp:UpdateUserPoolClient
                  - cognito-idp:AdminSetUserPassword
                Resource:
                  Fn::ImportValue: !Sub ${DeploymentName}-Cognito-UserPoolARN

  FargateCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${DeploymentName}-frontend
      ClusterSettings:
        - Name: containerInsights
          Value: enabled

  ContainerService:
    Type: AWS::ECS::Service
    DependsOn: ApplicationLoadBalancerListener
    Properties:
      ServiceName: self-service-frontend
      Cluster: !GetAtt FargateCluster.Arn
      TaskDefinition: !Ref TaskDefinition
      PropagateTags: SERVICE
      LaunchType: FARGATE
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: self-service-frontend
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref ApplicationTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Split [ ",", !ImportValue VPC-ProtectedSubnets ]
          SecurityGroups: [ !GetAtt ContainerServiceSecurityGroup.GroupId ]

  ContainerServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue VPC-ID
      GroupDescription: Frontend container service access
      SecurityGroupIngress:
        - Description: Allow traffic from the application load balancer
          SourceSecurityGroupId: !GetAtt ApplicationSecurityGroup.GroupId
          IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
      Tags:
        - Key: Name
          Value: !Sub ${DeploymentName}-frontend-container-service

  #--- Application load balancing ---#

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      Name: !Sub ${DeploymentName}-app
      Subnets: !Split [ ",", !ImportValue VPC-InternetSubnets ]
      SecurityGroups: [ !Ref ApplicationSecurityGroup ]
      LoadBalancerAttributes:
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: true
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value: !ImportValue ELB-AccessLogsBucket

  ApplicationLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS13-1-2-2021-06
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Certificates:
        - CertificateArn:
            Fn::ImportValue: !If [ Subdomain, DNS-SubdomainCertificateARN, DNS-CertificateARN ]
      DefaultActions:
        - TargetGroupArn: !Ref ApplicationTargetGroup
          Type: forward

  ApplicationTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${DeploymentName}-ecs
      VpcId: !ImportValue VPC-ID
      Port: !Ref ContainerPort
      Protocol: HTTP
      TargetType: ip

  ApplicationSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue VPC-ID
      GroupDescription: Frontend application load balancer
      SecurityGroupIngress:
        - Description: Allow secure traffic from the internet
          CidrIp: 0.0.0.0/0     # Any IPv4 address
          IpProtocol: tcp
          FromPort: 443         # HTTPS
          ToPort: 443
      Tags:
        - Key: Name
          Value: !Sub ${DeploymentName}-frontend-application-load-balancer

  ApplicationSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !GetAtt ApplicationSecurityGroup.GroupId
      Description: Allow traffic to the frontend container service
      DestinationSecurityGroupId: !GetAtt ContainerServiceSecurityGroup.GroupId
      IpProtocol: tcp
      FromPort: !Ref ContainerPort
      ToPort: !Ref ContainerPort

  #--- Logging ---#

  AccessLogsBucket:
    # checkov:skip=CKV_AWS_18:Ensure the S3 bucket has access logging enabled
    # checkov:skip=CKV_AWS_21:Ensure the S3 bucket has versioning enabled
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - ${DeploymentName}-application-access-logs-${ID}
        - ID: !Select [ 0, !Split [ "-", !Select [ 2, !Split [ "/", !Ref AWS::StackId ] ] ] ]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-access-logs.html
  AccessLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AccessLogsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: s3:PutObject
            Resource: !Sub ${AccessLogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*
            Principal:
              AWS: !FindInMap [ ElasticLoadBalancer, !Ref AWS::Region, AccountID ]

  LoadBalancerWebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Sub ${AWS::StackName}-${Environment}-LoadBalancerWebACL
      Scope: REGIONAL
      Description: This is WebACL to protect the API and Load Balancers
      DefaultAction:
        Allow: { }
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub ${AWS::StackName}-${Environment}-FrontendWebACLMetric
      Rules:
        - Name: AWS-AWSManagedRulesKnownBadInputsRuleSet
          Priority: 1
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub ${AWS::StackName}-${Environment}-AWSManagedRulesKnownBadInputsRuleSet
        - Name: AWS-AWSManagedRulesAmazonIpReputationList
          Priority: 2
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAmazonIpReputationList
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub ${AWS::StackName}-${Environment}-AWSManagedRulesAmazonIpReputationList
        - Name: AWS-AWSManagedRulesAnonymousIpList
          Priority: 3
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAnonymousIpList
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub ${AWS::StackName}-${Environment}-AWSManagedRulesAnonymousIpList
        - Name: AWS-AWSManagedRulesCommonRuleSet
          Priority: 4
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub ${AWS::StackName}-${Environment}-AWSManagedRulesCommonRuleSet
        - Name: AWS-AWSManagedRulesAdminProtectionRuleSet
          Priority: 5
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAdminProtectionRuleSet
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub ${AWS::StackName}-${Environment}-AWSManagedRulesAdminProtectionRuleSet
        - Name: SQLInject-RuleSet
          Priority: 6
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesSQLiRuleSet
          OverrideAction:
            None: { }
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub '${AWS::StackName}-${Environment}-SQLinjection-ruleset-metric'
        - Name: RateBased-CountIpRule
          Priority: 9
          Statement:
            RateBasedStatement:
              Limit: 100
              AggregateKeyType: IP
          Action:
            Count: { }
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "${AWS::StackName}-${Environment}-RateBased-CountIp-ruleset-metric"
            SampledRequestsEnabled: true

  LoadBalancerWebACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      WebACLArn: !GetAtt LoadBalancerWebACL.Arn
      ResourceArn: !Ref ApplicationLoadBalancer

  WafLogGroup:
    # checkov:skip=CKV_AWS_158:Ensure that CloudWatch Log Group is encrypted by KMS
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join
        - "-"
        - - 'aws-waf-logs'
          - 'onboarding-self-service-frontend'
          - !If [ IsLocal, !Ref DeploymentName, !Ref AWS::NoValue ]
      RetentionInDays: 14
      DataProtectionPolicy:
        Name: data-protection-policy-frontend-loadbalancer
        Description: Data Protection for Cloudwatch Logs
        Version: '2021-06-01'
        Statement:
          - Sid: audit-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/EmailAddress
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/OpenSshPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PuttyPrivateKey
            Operation:
              Audit:
                FindingsDestination:
                  CloudWatchLogs:
                    LogGroup: !Ref LogAuditLogGroup
          - Sid: redact-policy
            DataIdentifier:
              - arn:aws:dataprotection::aws:data-identifier/EmailAddress
              - arn:aws:dataprotection::aws:data-identifier/IpAddress
              - arn:aws:dataprotection::aws:data-identifier/Address
              - arn:aws:dataprotection::aws:data-identifier/AwsSecretKey
              - arn:aws:dataprotection::aws:data-identifier/OpenSshPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PgpPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PkcsPrivateKey
              - arn:aws:dataprotection::aws:data-identifier/PuttyPrivateKey
            Operation:
              Deidentify:
                MaskConfig: { }

  WafLoggingConfiguration:
    Type: AWS::WAFv2::LoggingConfiguration
    Properties:
      ResourceArn: !GetAtt LoadBalancerWebACL.Arn
      LogDestinationConfigs:
        - !GetAtt WafLogGroup.Arn

  WafLogCslsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: CslsLoggingEnabled
    Properties:
      LogGroupName: !Ref WafLogGroup
      FilterName: "Waf logs for Frontend"
      FilterPattern: ""
      DestinationArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, clslSubscriptionFilterArn ]

  TxMASQSProducerAuditEventQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 # 14 days in seconds
      QueueName: !Sub '${AWS::StackName}-AuditEventQueue'
      KmsMasterKeyId: !Ref TxMASQSProducerAuditEventQueueEncryptionKeyAlias
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TxMAAuditEventDeadLetterQueue.Arn
        maxReceiveCount: 10
      Tags:
        - Key: 'AuthoredBy'
          Value: 'TxMA'
        - Key: 'ProducerType'
          Value: 'SQS'

  TxMASQSAllowQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref TxMASQSProducerAuditEventQueue
      PolicyDocument:
        Statement:
          - Sid: 'AllowAccessToAdmin'
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - 'sqs:ChangeMessageVisibility'
              - 'sqs:ReceiveMessage'
              - 'sqs:DeleteMessage'
              - 'sqs:GetQueueAttributes'
              - 'sqs:SendMessage'
              - 'sqs:GetQueueUrl'
            Resource: !GetAtt TxMASQSProducerAuditEventQueue.Arn
          - Sid: 'AllowReadByTxMAAccount'
            Effect: Allow
            Principal:
              AWS: !FindInMap [ TxMAAccountARN, Environment, !Ref 'Environment' ]
            Action:
              - 'sqs:ChangeMessageVisibility'
              - 'sqs:ReceiveMessage'
              - 'sqs:DeleteMessage'
              - 'sqs:GetQueueAttributes'
            Resource: !GetAtt TxMASQSProducerAuditEventQueue.Arn

  TxMAAuditEventDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 # 14 days in seconds
      QueueName: !Sub '${AWS::StackName}-AuditEventDeadLetterQueue'
      KmsMasterKeyId: !Ref TxMASQSProducerAuditEventQueueEncryptionKeyAlias
      Tags:
        - Key: 'AuthoredBy'
          Value: 'TxMA'
        - Key: 'ProducerType'
          Value: 'SQS'

  TxMASQSProducerAuditEventQueueEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Symmetric key used to encrypt TxMA audit messages at rest in SQS
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: 'Enable root account access'
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - 'kms:*'
            Resource: '*'
          - Sid: 'Allow Lambda Access'
            Effect: Allow
            Principal:
              Service: 'lambda.amazonaws.com'
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt
              - kms:GenerateDataKey
            Resource: '*'
          - Sid: 'Allow decryption of events by TxMA'
            Effect: Allow
            Principal:
              AWS: !FindInMap [ TxMAAccountARN, Environment, !Ref 'Environment' ]
            Action:
              - 'kms:decrypt'
            Resource: '*'
      Tags:
        - Key: 'AuthoredBy'
          Value: 'TxMA'
        - Key: 'ProducerType'
          Value: 'SQS'

  TxMASQSProducerAuditEventQueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/AuditEventEncryptionKey
      TargetKeyId: !Ref TxMASQSProducerAuditEventQueueEncryptionKey

  KMSARNParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${AWS::StackName}/KMSARN'
      Type: String
      Value: !Sub '${TxMASQSProducerAuditEventQueueEncryptionKey.Arn}'
      Description: ARN of the KMS key used for encryption.
      Tags:
        AuthoredBy: TxMA
        ProducerType: SQS

  SQSQueueARNParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${AWS::StackName}/QueueARN'
      Type: String
      Value: !Sub '${TxMASQSProducerAuditEventQueue.Arn}'
      Description: ARN of the queue to submit events to.
      Tags:
        AuthoredBy: TxMA
        ProducerType: SQS

  SQSQueueNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${AWS::StackName}/QueueName'
      Type: String
      Value: !Sub '${TxMASQSProducerAuditEventQueue.QueueName}'
      Description: Name of the queue to submit events to.
      Tags:
        AuthoredBy: TxMA
        ProducerType: SQS

  SQSQueueURLParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/${AWS::StackName}/QueueURL'
      Type: String
      Value: !Sub '${TxMASQSProducerAuditEventQueue.QueueUrl}'
      Description: URL of the queue to submit events to.
      Tags:
        AuthoredBy: TxMA
        ProducerType: SQS


  #--- DNS ---#

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: A
      Name: !Sub
        - ${Name}${Domain}
        - Name: !If [ Subdomain, !Sub "${DeploymentName}.", ""]
          Domain: !ImportValue DNS-Domain
      HostedZoneId: !ImportValue DNS-HostedZoneID
      AliasTarget:
        DNSName: !GetAtt ApplicationLoadBalancer.DNSName
        HostedZoneId: !GetAtt ApplicationLoadBalancer.CanonicalHostedZoneID
        EvaluateTargetHealth: false

Outputs:
  AdminToolURL:
    Value: !Sub https://${DNSRecord}
  KMSARN:
    Description: 'ARN of the KMS key used for encryption.'
    Value: !Sub '${TxMASQSProducerAuditEventQueueEncryptionKey.Arn}'
    Export:
      Name: !Sub '${AWS::StackName}-KMSARN'
  QueueARN:
    Description: 'ARN of the queue to submit events to.'
    Value: !Sub '${TxMASQSProducerAuditEventQueue.Arn}'
    Export:
      Name: !Sub '${AWS::StackName}-QueueARN'
  QueueName:
    Description: 'Name of the queue to submit events to.'
    Value: !Sub '${TxMASQSProducerAuditEventQueue.QueueName}'
    Export:
      Name: !Sub '${AWS::StackName}-QueueName'
  QueueURL:
    Description: 'URL of the queue to submit events to.'
    Value: !Sub '${TxMASQSProducerAuditEventQueue.QueueUrl}'
    Export:
      Name: !Sub '${AWS::StackName}-QueueURL'
