{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/file-upload/macro.njk" import govukFileUpload %}

{% macro generate(action, buttonText, buttonClasses, cancelUrl) %}
  <form class="form" method="post"{% if action %} action="{{ action }}"{% endif %} novalidate="novalidate">
    {{ caller() }}

    <div class="govuk-button-group">
      {{ govukButton({
        text: buttonText | default("Continue"),
        classes: buttonClasses if buttonClasses,
        attributes: {
          id: "submit"
        }
      }) }}

      {% if cancelUrl %}<a class="govuk-link" href="{{ cancelUrl }}">Cancel</a>{% endif %}
    </div>
  </form>
{% endmacro %}

{% macro textInput(label, id, classes, hint, type, autocomplete, inputmode, value, labelClasses, isPageHeading) %}
  {{ govukInput({
    label: {
      text: label,
      classes: labelClasses if labelClasses,
      isPageHeading: isPageHeading if isPageHeading
    } if label,
    hint: {
      text: hint
    } if hint,
    id: id,
    name: id,
    type: type if type,
    spellcheck: false,
    classes: classes | default("govuk-!-width-full"),
    autocomplete: autocomplete if autocomplete,
    inputmode: inputmode if inputmode,
    value: value | default(values[id] if values and values.hasOwnProperty(id)),
    errorMessage: {
      text: errorMessages[id]
    } if errorMessages and errorMessages.hasOwnProperty(id)
  }) }}
{% endmacro %}

{% macro emailInput(label, hint, classes = "govuk-!-width-three-quarters") %}
  {{ textInput(label | default("Email address"), "emailAddress", classes, hint, "email", "email") }}
{% endmacro %}

{% macro passwordInput(label, id, hint, autocomplete = "current-password") %}
  <div class="gem-c-show-password" data-module="show-password" data-disable-form-submit-check="false"
       data-show-text="Show" data-hide-text="Hide" data-show-full-text="Show password"
       data-hide-full-text="Hide password" data-announce-show="Your password is shown"
       data-announce-hide="Your password is hidden">
    {{ textInput(label | default("Enter a password"), id | default("password"), "gem-c-input govuk-input--width-20",
      hint, "password", autocomplete
    ) }}
  </div>
{% endmacro %}

{% macro securityCodeInput(label, labelClasses, isPageHeading) %}
  {{ textInput(
    label | default("Enter the 6 digit security code"),
    "securityCode",
    "govuk-input--width-5",
    type = "text",
    autocomplete = "one-time-code",
    inputmode = "numeric",
    labelClasses = labelClasses,
    isPageHeading = isPageHeading
  ) }}
{% endmacro %}

{% macro mobileNumberInput(label = "UK mobile phone number") %}
  {{ textInput(label, "mobileNumber", "govuk-!-width-one-half", type = "tel", autocomplete = "tel") }}
{% endmacro %}

{% macro urlInput(label) %}
  {{ textInput(label, "redirectUris", "govuk-!-width-full", "Enter URIs starting with https:// (or http://localhost)", "url", "url") }}
{% endmacro %}

{% macro hiddenInput(id, value) %}
  {{ textInput(id = id, type = "hidden", value = value) }}
{% endmacro %}

{% macro textAreaInput(label, id, hint, rows = 5) %}
  {{ govukTextarea({
    label: {
      text: label
    } if label,
    hint: {
      text: hint
    } if hint,
    id: id,
    name: id,
    rows: rows,
    value: values[id] if values and values.hasOwnProperty(id),
    errorMessage: {
      text: errorMessages[id]
    } if errorMessages and errorMessages.hasOwnProperty(id)
  }) }}
{% endmacro %}

{% macro checkboxesInput(label, id, items) %}
  {{ govukCheckboxes({
    fieldset: {
      legend: {
        text: label
      }
    } if label,
    id: id,
    name: id,
    items: items
  }) }}
{% endmacro %}

{% macro radiosInput(label, labelClasses, name, hint, items, id = name + "-options", isPageHeading) %}
  {{ govukRadios({
    name: name,
    idPrefix: name,
    attributes: {
      id: id
    },
    fieldset: {
      legend: {
        text: label,
        isPageHeading: isPageHeading if isPageHeading,
        classes: labelClasses if labelClasses
      }
    },
    hint: {
      text: hint
    } if hint,
    value: values[id] if values and values.hasOwnProperty(id),
    items: items,
    errorMessage: {
      text: errorMessages[id]
    } if errorMessages and errorMessages.hasOwnProperty(id)
  }) }}
{% endmacro %}

{% macro fileUploadInput(id, filetypes, label) %}
  {{ govukFileUpload({
    id: id,
    name: id,
    label: {
      text: label
    } if label,
    attributes: {
      accept: filetypes
    } if filetypes,
    errorMessage: {
      text: errorMessages[id]
    } if errorMessages and errorMessages.hasOwnProperty(id)
  }) }}
{% endmacro %}
